name: C++ CI

on:
  push:
    branches: [ master, main ]
    paths:
      - 'cpp/**'
      - '.github/workflows/cpp-ci.yml'
  pull_request:
    branches: [ master, main ]
    paths:
      - 'cpp/**'
      - '.github/workflows/cpp-ci.yml'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake g++ python3-dev
    
    - name: Configure CMake
      run: |
        cd cpp
        mkdir -p build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON
    
    - name: Build
      run: |
        cd cpp/build
        make -j$(nproc)
    
    - name: Run C++ tests
      run: |
        cd cpp/build
        ./tests/test_drawing --gtest_output=xml:test_results.xml
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cpp-test-results
        path: cpp/build/test_results.xml
  
  python-bindings:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y g++ python3-dev
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pybind11 setuptools wheel pytest
    
    - name: Build Python bindings
      run: |
        cd cpp
        python setup.py build_ext --inplace
    
    - name: Test Python bindings
      run: |
        python test_cpp_bindings.py
        python test_batch_operations.py
    
  performance-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y g++ python3-dev cmake
        python -m pip install --upgrade pip
        pip install pybind11 setuptools wheel
    
    - name: Build everything
      run: |
        cd cpp
        mkdir -p build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make -j$(nproc)
        cd ..
        python setup.py build_ext --inplace
    
    - name: Run performance checks
      run: |
        cd cpp/build
        echo "Running C++ performance tests..."
        ./tests/test_drawing --gtest_filter="PerformanceTest.*:BatchOperationsTest.Performance*"
        
        cd ../..
        echo "Running Python binding performance tests..."
        python -c "from python.drawing_cpp_wrapper import compare_performance; compare_performance()"
    
    - name: Check performance targets
      run: |
        # This could be expanded to parse output and verify targets
        echo "Performance targets:"
        echo "- Memory: <100 bytes/object (target: 32 bytes achieved)"
        echo "- Load 1M objects: <100ms"
        echo "- Save 1M objects: <50ms"
        echo "- Batch operations: >10M objects/second"